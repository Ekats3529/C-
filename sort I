#include <iostream>
#include <fstream>
#include <string>
#include <algorithm>
#include <iomanip>
using namespace std;

ifstream in("input.txt");
ofstream out("output.txt");

struct student {
    string surname, name, secname;
    int year, group, res[5];
    void print();
};



void student::print() {
    out << group << " " << surname << " " << name << " " << secname;
    out << " " << year << " ";
    for (int i = 0; i < 5; i++) {
        out << res[i] << " ";
    }
    out << endl;

}

void shell_sort(student* s, int n) {
    int i, j, incr = n / 2;
    while (incr > 0) {
        for (i = incr; i < n; i++) {
            j = i - incr;
            while (j >= 0) {
                if (s[j].surname > s[j + incr].surname)
                {
                    swap(s[j + incr], s[j]);
                    j = j - incr;
                }
                else if ((s[j].surname == s[j + incr].surname) && (s[j].name > s[j + incr].name)) {
                    swap(s[j + incr], s[j]);
                    j = j - incr;
                }
                else if ((s[j].name == s[j + incr].name) && (s[j].secname > s[j + incr].secname)) {
                    swap(s[j + incr], s[j]);
                    j = j - incr;
                }
                else if ((s[j].secname == s[j + incr].secname) && (s[j].year < s[j + incr].year)) {
                    swap(s[j + incr], s[j]);
                    j = j - incr;
                }
                else {
                    j--;
                }
            }
        }
        incr = incr / 2;
    }
}

int main()
{
    student s[30];
    int n = 0;
    while (in.peek() != EOF) {
        in >> s[n].group;
        in >> s[n].surname;
        in >> s[n].name;
        in >> s[n].secname;
        in >> s[n].year;
        for (int i = 0; i < 5; i++) {
            in >> s[n].res[i];
        }
        //s[0].print();
        n++;
    }
    n--;
    //cout << n;
    shell_sort(s, n);
    for (int i = 0; i < n; i++) {
        s[i].print();
    }
    in.close();
    out.close();
    return 0;
}
