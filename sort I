#include <iostream>
#include <fstream>
#include <string>
#include <algorithm>
#include <iomanip>
using namespace std;

ifstream in("input.txt");
ofstream out("output.txt");

struct student {
    string surname, name, secname;
    int year, group, res[5];
    void print();
};



void student::print() {
    out << group << " " << surname << " " << name << " " << secname;
    out << " " << year << " ";
    for (int i = 0; i < 5; i++) {
        out << res[i] << " ";
    }
    out << endl;

}

bool ok(student a, student b) {
    return a.surname > b.surname || ((a.surname == b.surname) && (a.name > b.name)) ||
        ((a.name == b.name) && (a.secname > b.secname)) || ((a.secname == b.secname) && (a.year < b.year));
}


void shell_sort(student* s, int n) {
    int i, j, incr = n / 2;
    while (incr > 0) {
        for (i = incr; i < n; i++) {
            j = i - incr;
            while (j >= 0) {
                if (ok)
                {
                    swap(s[j + incr], s[j]);
                    j = j - incr;
                }
                else {
                    j--;
                }
            }
        }
        incr = incr / 2;
    }
}

void bubble_sort(student* s, int n) { //стабильная
    int i, j;
    for (i = 0; i < n - 1; i++) {
        for (j = n - 1; j > i; j--) {
            if (ok(s[i], s[j]))
            {
                swap(s[j], s[i]);
            }
        }
    }
}

void choice_sort(student* s, int n) { //нестабильная
    int low, j;
    for (int i = 0; i < n - 1; i++) {
        for (j = i + 1; j < n; j++) {
            if (ok(s[i], s[j])) {
                swap(s[i], s[j]);
            }
        }
    }
}


void insert_sort(student* s, int n) { //стабильная
    int j = 0;
    for (int i = 1; i < n; i++) {
        j = i;
        while (j > 0 && ok(s[j - 1], s[j])) {
            swap(s[j - 1], s[j]);
            j--;
        }
    }

}

int main()
{
    student s[30];
    int n = 0;
    while (in.peek() != EOF) {
        in >> s[n].group;
        in >> s[n].surname;
        in >> s[n].name;
        in >> s[n].secname;
        in >> s[n].year;
        for (int i = 0; i < 5; i++) {
            in >> s[n].res[i];
        }
        //s[0].print();
        n++;
    }
    n--;
    //cout << n;
    shell_sort(s, n);
    for (int i = 0; i < n; i++) {
        s[i].print();
    }
    in.close();
    out.close();
    return 0;
}
