#include<iostream>  
#include<cmath>  
#include<iomanip>  
using namespace std;

class Time
{
private:
	int hours, minutes, seconds;
public:

	Time() : hours(0), minutes(0), seconds(0) {}
	Time(int hours, int minutes, int seconds) : hours(hours), minutes(minutes), seconds(seconds) {}


	void set_time(int h, int m, int s)
	{
		this->hours = (hours + h + (minutes + m + (seconds + s) / 60) / 60) % 24;
		this->minutes = (minutes + m + (seconds + s) / 60) % 60;
		this->seconds = (seconds + s) % 60;
	}

	void after_moment(int h, int m, int s)
	{
		int hour, min, sec;
		hour = (hours + h + (minutes + m + (seconds + s) / 60) / 60) % 24;
		min = (minutes + m + (seconds + s) / 60) % 60;
		sec= (seconds + s) % 60;

		cout << hour << ":" << min << ":" << sec << endl;

	}

	void show_time()
	{
		cout << hours << ":" << minutes << ":" << seconds << endl;
	}

	void moment(Time & some_time)
	{
		int hour = 0, minute = 0, second = 0;
		if (some_time.seconds < seconds) { second = 60 - seconds + some_time.seconds; minute -= 1; }
		else { second = some_time.seconds - seconds; }
		if (some_time.minutes < minutes) { minute += 60 - minutes + some_time.minutes; hour -= 1; }
		else { minute += some_time.minutes - minutes; }
		if (hours < hours) { hour += 24 - hours + hours; }
		else { hour += some_time.hours - hours; }
		cout << hour << ":" << minute << ":" << second << endl;
	}
};

int main()
{
	Time time;
	time.show_time();
	time.set_time(12, 38, 42);
	time.show_time();
	time.after_moment(0, 36, 41);

	Time new_time(12, 38, 42);
	new_time.set_time(0, 36, 41);
	new_time.show_time();
	time.moment(new_time);
	return 0;
}
